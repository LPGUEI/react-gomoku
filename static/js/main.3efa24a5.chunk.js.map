{"version":3,"sources":["Components/Square.js","utils.js","useBoard.js","App.js","index.js"],"names":["Cell","styled","div","props","$row","$col","Piece","$value","Square","row","col","value","onClick","memo","countTotal","board","currentY","currentX","directionY","directionX","now","tempX","tempY","total","useBoard","useState","Array","fill","setBoard","updateBoard","useCallback","y","x","newValue","map","isBlackNext","useRef","lastRow","lastCol","winner","setWinner","useEffect","undefined","current","every","findWinner","playAgain","window","location","reload","handlePieceClick","Title","h1","Message","Button","button","Wrapper","Board","Row","App","className","rowIndex","colIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3efa24a5.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { memo } from \"react\";\n\nconst Cell = styled.div`\n  background: #ba8c63;\n  width: 30px;\n  height: 30px;\n  position: relative;\n  box-shadow: 4px 6px #666;\n\n  &:before {\n    content: \"\";\n    height: 100%;\n    width: 2px;\n    background: black;\n    position: absolute;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n\n    ${(props) =>\n      props.$row === 0 &&\n      `\n      top: 50%;\n    `}\n\n    ${(props) =>\n      props.$row === 18 &&\n      `\n      height: 50%;\n    `}\n  }\n\n  &:after {\n    content: \"\";\n    width: 100%;\n    height: 2px;\n    background: black;\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n\n    ${(props) =>\n      props.$col === 0 &&\n      `\n      left: 50%;\n    `}\n\n    ${(props) =>\n      props.$col === 18 &&\n      `\n      width: 50%;\n    `}\n  }\n`;\n\nconst Piece = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  position: absolute;\n  transform: scale(0.8);\n  z-index: 1;\n  cursor: pointer;\n\n  ${(props) =>\n    props.$value === \"black\" &&\n    `\n    background: black;\n  `}\n\n  ${(props) =>\n    props.$value === \"white\" &&\n    `\n    background: white;\n  `}\n`;\n\nconst Square = ({ row, col, value, onClick }) => {\n  const handleSquareClick = () => {\n    onClick(row, col, value);\n  };\n  return (\n    <Cell $row={row} $col={col} onClick={handleSquareClick}>\n      <Piece $value={value} />\n    </Cell>\n  );\n};\n\nexport default memo(Square);\n","function countTotal(board, currentY, currentX, directionY, directionX) {\n  const now = board[currentY][currentX];\n\n  let tempX = currentX;\n  let tempY = currentY;\n  let total = 0;\n\n  do {\n    tempX += directionX;\n    tempY += directionY;\n\n    if (tempY === -1 || tempY === 19 || tempX === -1 || tempX === 19) break;\n\n    if (board[tempY][tempX] === now) {\n      total++;\n    } else {\n      break;\n    }\n  } while (true);\n  return total;\n}\n\nexport function findWinner(board, y, x) {\n  if (\n    countTotal(board, y, x, 1, 0) + countTotal(board, y, x, -1, 0) >= 4 ||\n    countTotal(board, y, x, 0, 1) + countTotal(board, y, x, 0, -1) >= 4 ||\n    countTotal(board, y, x, 1, 1) + countTotal(board, y, x, -1, -1) >= 4 ||\n    countTotal(board, y, x, 1, -1) + countTotal(board, y, x, -1, 1) >= 4\n  ) {\n    return board[y][x];\n  }\n\n  if (board.every((row) => row.every((col) => col))) {\n    return \"draw\";\n  }\n}\n","import { useState, useRef, useEffect, useCallback } from \"react\";\nimport { findWinner } from \"./utils.js\";\n\nexport default function useBoard() {\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\n\n  const updateBoard = useCallback((y, x, newValue) => {\n    setBoard((board) =>\n      board.map((row, currentY) => {\n        if (currentY !== y) return row;\n\n        return row.map((col, currentX) => {\n          if (currentX !== x) return col;\n          return newValue;\n        });\n      })\n    );\n  }, []);\n\n  const isBlackNext = useRef(true);\n  const lastRow = useRef();\n  const lastCol = useRef();\n\n  const handlePieceClick = (row, col, value) => {\n    if (!winner) {\n      if (value) return;\n      lastRow.current = row;\n      lastCol.current = col;\n      updateBoard(row, col, isBlackNext.current ? \"black\" : \"white\");\n      isBlackNext.current = !isBlackNext.current;\n    }\n  };\n\n  const [winner, setWinner] = useState();\n\n  useEffect(() => {\n    if (lastRow.current === undefined || lastCol.current === undefined) return;\n    setWinner(findWinner(board, lastRow.current, lastCol.current));\n  }, [board]);\n\n  const playAgain = useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  return {\n    board,\n    winner,\n    handlePieceClick,\n    playAgain,\n  };\n}\n","import styled from \"styled-components\";\nimport Square from \"./Components/Square\";\nimport useBoard from \"./useBoard.js\";\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 36px;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 24px;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  margin: 20px auto;\n  border-radius: 3px;\n  font-size: 18px;\n  padding: 8px;\n  border-radius: 5px;\n  background: grey;\n  color: white;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nconst Board = styled.div`\n  margin: 0 auto;\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nexport default function App() {\n  const { board, winner, handlePieceClick, playAgain } = useBoard();\n\n  return (\n    <div className=\"App\">\n      <Title>Gomoku</Title>\n      {winner && <Message>The Winner is: {winner}!</Message>}\n      <Button onClick={playAgain}>Play again</Button>\n      <Wrapper>\n        <Board>\n          {board.map((row, rowIndex) => {\n            return (\n              <Row key={rowIndex}>\n                {row.map((col, colIndex) => {\n                  return (\n                    <Square\n                      key={colIndex}\n                      value={board[rowIndex][colIndex]}\n                      row={rowIndex}\n                      col={colIndex}\n                      onClick={handlePieceClick}\n                    />\n                  );\n                })}\n              </Row>\n            );\n          })}\n        </Board>\n      </Wrapper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}